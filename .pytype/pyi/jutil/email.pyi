# (generated with --quick)

from typing import Any, Optional, TypeVar, Union

EmailMultiAlternatives: Any
logger: logging.Logger
logging: module
now: Any
settings: Any

AnyStr = TypeVar('AnyStr', str, bytes)

def b64encode(s: bytes, altchars: bytes = ...) -> bytes: ...
def basename(path: Union[_PathLike[AnyStr], AnyStr]) -> AnyStr: ...
def log_event(name: str, request = ..., data: Optional[dict] = ..., ip: str = ...) -> None: ...
def send_email(recipients: list, subject: str, text: str = ..., html: str = ..., sender: str = ..., files: list = ..., cc_recipients: list = ..., bcc_recipients: list = ..., exceptions: bool = ...) -> Any: ...
def send_email_sendgrid(recipients: list, subject: str, text: str = ..., html: str = ..., sender: str = ..., files: list = ..., cc_recipients: list = ..., bcc_recipients: list = ..., exceptions: bool = ...) -> Any: ...
def send_email_smtp(recipients: list, subject: str, text: str = ..., html: str = ..., sender: str = ..., files: list = ..., cc_recipients: list = ..., bcc_recipients: list = ..., exceptions: bool = ...) -> int: ...
