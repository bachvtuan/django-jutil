# (generated with --quick)

import datetime
import decimal
from typing import Any, Dict, Optional, Pattern, Tuple, Type

BE_BANK_NAME_BY_BIC: Dict[str, str]
BE_BIC_BY_ACCOUNT_NUMBER: Dict[str, str]
DIGIT_FILTER: Pattern[str]
DK_BANK_CLEARING_MAP: Dict[str, str]
Decimal: Type[decimal.Decimal]
EMAIL_VALIDATOR: Pattern[str]
FI_BANK_NAME_BY_BIC: Dict[str, str]
FI_BIC_BY_ACCOUNT_NUMBER: Dict[str, str]
FI_COMPANY_ORG_ID_FILTER: Pattern[str]
FI_SSN_FILTER: Pattern[str]
FI_SSN_VALIDATOR: Pattern[str]
IBAN_FILTER: Pattern[str]
IBAN_LENGTH_BY_COUNTRY: Dict[str, int]
PASSPORT_FILTER: Pattern[str]
PHONE_FILTER: Pattern[str]
PHONE_VALIDATOR: Pattern[str]
SE_BANK_CLEARING_LIST: Tuple[Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int], Tuple[str, str, str, int]]
SE_SSN_FILTER: Pattern[str]
SE_SSN_VALIDATOR: Pattern[str]
STRIP_NON_ALPHANUMERIC: Pattern[str]
STRIP_NON_NUMBERS: Pattern[str]
STRIP_WHITESPACE: Pattern[str]
ValidationError: Any
_: Any
date: Type[datetime.date]
now: Any
re: module
unicodedata: module

def ascii_filter(v: str) -> str: ...
def be_iban_bank_info(v: str) -> Tuple[str, str]: ...
def be_iban_validator(v: str) -> None: ...
def bic_filter(v: str) -> str: ...
def bic_sanitizer(v: str) -> str: ...
def bic_validator(v: str) -> None: ...
def calculate_age(born: datetime.date, today: datetime.date = ...) -> int: ...
def country_code_filter(v: str) -> str: ...
def country_code_sanitizer(v: str) -> str: ...
def country_code_validator(v: str) -> None: ...
def digit_filter(v: str) -> str: ...
def dk_clearing_code_bank_name(v: str) -> str: ...
def dk_iban_bank_info(v: str) -> Tuple[str, str]: ...
def dk_iban_validator(v: str) -> None: ...
def ee_iban_validator(v: str) -> None: ...
def email_filter(v: str) -> str: ...
def email_sanitizer(v: str) -> str: ...
def email_validator(v: str) -> None: ...
def fi_company_org_id_filter(v: str) -> str: ...
def fi_company_org_id_generator() -> str: ...
def fi_company_org_id_validator(v0: str) -> None: ...
def fi_iban_bank_info(v: str) -> Tuple[str, str]: ...
def fi_iban_validator(v: str) -> None: ...
def fi_payment_reference_number(num: str) -> str: ...
def fi_payment_reference_validator(v: str) -> None: ...
def fi_ssn_age(ssn: str, today: datetime.date = ...) -> int: ...
def fi_ssn_birthday(v: str) -> datetime.date: ...
def fi_ssn_filter(v: str) -> str: ...
def fi_ssn_generator() -> str: ...
def fi_ssn_validator(v: str) -> None: ...
def filter_country_company_org_id(country_code: str, v: str) -> str: ...
def iban_bank_info(v: str) -> Tuple[str, str]: ...
def iban_bic(v: str) -> str: ...
def iban_filter(v: str) -> str: ...
def iban_filter_readable(acct) -> str: ...
def iban_validator(v: str) -> None: ...
def iso_payment_reference_validator(v: str) -> None: ...
def passport_filter(v: str) -> str: ...
def passport_sanitizer(v: str) -> str: ...
def passport_validator(v: str) -> None: ...
def phone_filter(v: str) -> str: ...
def phone_sanitizer(v: str) -> str: ...
def phone_validator(v: str) -> None: ...
def randint(a: int, b: int) -> int: ...
def se_clearing_code_bank_info(account_number: str) -> Tuple[str, Optional[int]]: ...
def se_iban_validator(v: str) -> None: ...
def se_ssn_filter(v: str) -> str: ...
def se_ssn_validator(v: str) -> None: ...
def validate_country_company_org_id(country_code: str, v: str) -> None: ...
def validate_country_iban(v: str, country: str) -> None: ...
