# (generated with --quick)

import datetime
import decimal
from typing import Any, List, Type

Decimal: Type[decimal.Decimal]
lazy: Any
logger: logging.Logger
logging: module
os: module
re: module
settings: Any
subprocess: module
tempfile: module
timedelta: Type[datetime.timedelta]
ucfirst_lazy: Any
xml: module

def dec1(a) -> decimal.Decimal: ...
def dec2(a) -> decimal.Decimal: ...
def dec3(a) -> decimal.Decimal: ...
def dec4(a) -> decimal.Decimal: ...
def dec5(a) -> decimal.Decimal: ...
def dec6(a) -> decimal.Decimal: ...
def format_full_name(first_name: str, last_name: str, max_length: int = ...) -> str: ...
def format_table(rows: List[list], max_col: int = ..., max_line: int = ..., col_sep: str = ..., row_sep: str = ..., row_begin: str = ..., row_end: str = ..., has_label_row: bool = ..., left_align: List[int] = ..., center_align: List[int] = ...) -> str: ...
def format_timedelta(dt: datetime.timedelta, days_label: str = ..., hours_label: str = ..., minutes_label: str = ..., seconds_label: str = ..., **kwargs) -> str: ...
def format_xml(content: str, encoding: str = ..., exceptions: bool = ...) -> str: ...
def format_xml_bytes(content: bytes, encoding: str = ..., exceptions: bool = ...) -> bytes: ...
def format_xml_file(full_path: str, encoding: str = ..., exceptions: bool = ...) -> bytes: ...
def get_media_full_path(file_path: str) -> str: ...
def strip_media_root(file_path: str) -> str: ...
def ucfirst(v: str) -> str: ...
